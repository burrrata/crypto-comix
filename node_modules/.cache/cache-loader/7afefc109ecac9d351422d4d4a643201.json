{"remainingRequest":"/home/testingtesting123/Documents/Code/crypto-comix/node_modules/babel-loader/lib/index.js??ref--8-1!/home/testingtesting123/Documents/Code/crypto-comix/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/home/testingtesting123/Documents/Code/crypto-comix/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/home/testingtesting123/Documents/Code/crypto-comix/docs/doc7.md","dependencies":[{"path":"/home/testingtesting123/Documents/Code/crypto-comix/docs/doc7.md","mtime":1596908935456},{"path":"/home/testingtesting123/Documents/Code/crypto-comix/.docusaurus/docusaurus-plugin-content-docs/site-docs-doc-7-md-e3d.json","mtime":1596908988061},{"path":"/home/testingtesting123/Documents/Code/crypto-comix/node_modules/cache-loader/dist/cjs.js","mtime":1596749887469},{"path":"/home/testingtesting123/Documents/Code/crypto-comix/node_modules/babel-loader/lib/index.js","mtime":1596749887413},{"path":"/home/testingtesting123/Documents/Code/crypto-comix/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1596749887285},{"path":"/home/testingtesting123/Documents/Code/crypto-comix/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1596749887289}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}